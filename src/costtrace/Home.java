/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package costtrace;

import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import costtrace.Calculator;
import java.util.HashMap;

/**
 *
 * @author md.rabiulkhan
 */
public class Home extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;

    String currname = "";

    String selectedCurrId = "", selectedCurrName = "", selectedCurrIsdef = "", selectedCategory_id = "", selectedCategory_name = "";

    String selectedCostId = "", selectedCostDate = "", selectedCostCategory = "", selectedCostAmount = "", selectedCostDescription = "", selectedisFixed = "";

    String selectedIncomeId = "", selectedincomeDate = "", selectedIncomeSource = "", selectedIncomeAmount = "";

    String selectedTargetId = "", selectedTargetFromDate = "", selectedTargetToDate = "", selectedTargetCategory = "", selectedTargetAmount = "";

 
    /**
     * Creates new form Home
     */
    public Home() {
        initComponents();
    }

    public Home(String user) {
        initComponents();
        jLabel_user.setText(user);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel_dashboard = new javax.swing.JLabel();
        jLabel_cost = new javax.swing.JLabel();
        jLabel_income = new javax.swing.JLabel();
        jLabel_target = new javax.swing.JLabel();
        jLabel_settings = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel_query = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel_user = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jInternalFrame_dashboard = new javax.swing.JInternalFrame();
        jPanel11 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel_monthlyTotal = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel_monthlyTotal_target = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel_total_hand = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel_bazarMonthly = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jLabel_bazarMonthly_target = new javax.swing.JLabel();
        jLabel_bazar_hand = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel_cgMonthly = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel_cgMonthly_target = new javax.swing.JLabel();
        jLabel_xyz_hand = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jLabel_travelMonthly = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jLabel_travelMonthly_target = new javax.swing.JLabel();
        jLabel_travel_hand = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel_shopMonthly = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        jLabel_shopMonthly_target = new javax.swing.JLabel();
        jLabel_shop_hand = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel_otherMonthly = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel_otherMonthly_target = new javax.swing.JLabel();
        jLabel_other_hand = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jLabel43 = new javax.swing.JLabel();
        jLabel_resMonthly = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel_resMonthly_target = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel_rest_hand = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jInternalFrame_addCost = new javax.swing.JInternalFrame();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jComboBox_cost_action = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jDateChooser_sDate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jComboBox_category = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jTextField_cost = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_cost = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea_description = new javax.swing.JTextArea();
        jLabel_currency = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jDateChooser_to = new com.toedter.calendar.JDateChooser();
        jButton5 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jDateChooser_from = new com.toedter.calendar.JDateChooser();
        jLabel22 = new javax.swing.JLabel();
        jLabel_totalCost = new javax.swing.JLabel();
        jLabel_curr = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jComboBox_cat_search = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        jLabel_avgCost = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel_targetam = new javax.swing.JLabel();
        jCheckBox_fixed = new javax.swing.JCheckBox();
        jInternalFrame_addIncome = new javax.swing.JInternalFrame();
        jPanel7 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jDateChooser_income_date = new com.toedter.calendar.JDateChooser();
        jComboBox_income_action = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField_income_amount = new javax.swing.JTextField();
        jTextField_income_source = new javax.swing.JTextField();
        jLabel_income_currency = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel19 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_income = new javax.swing.JTable();
        jDateChooser_income_search_from = new com.toedter.calendar.JDateChooser();
        jButton6 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jDateChooser_income_search_to = new com.toedter.calendar.JDateChooser();
        jInternalFrame_settings = new javax.swing.JInternalFrame();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField_currency = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBox_action = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_currency = new javax.swing.JTable();
        jCheckBox_isdefault = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jComboBox_action_category = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jTextField_category = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_category = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jInternalFrame_report = new javax.swing.JInternalFrame();
        jPanel20 = new javax.swing.JPanel();
        jDateChooser_targetFrom_date = new com.toedter.calendar.JDateChooser();
        jComboBox_target_action = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        jLabel_target_currency = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jDateChooser_targetTo_date = new com.toedter.calendar.JDateChooser();
        jComboBox_target_category = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jTextField_target_amount = new javax.swing.JTextField();
        jPanel21 = new javax.swing.JPanel();
        jDateChooser_target_search_from = new com.toedter.calendar.JDateChooser();
        jButton9 = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jDateChooser_target_search_to = new com.toedter.calendar.JDateChooser();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable_target = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        jComboBox_target_category_search = new javax.swing.JComboBox<>();
        jLabel47 = new javax.swing.JLabel();
        jLabel_target_total = new javax.swing.JLabel();
        jInternalFrame_query = new javax.swing.JInternalFrame();
        jPanel9 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));
        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MENU");

        jLabel_dashboard.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_dashboard.setText("Dashboard");
        jLabel_dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel_dashboardMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_dashboardMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_dashboardMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_dashboardMouseEntered(evt);
            }
        });

        jLabel_cost.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_cost.setText("Add Cost");
        jLabel_cost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_costMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_costMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_costMouseEntered(evt);
            }
        });

        jLabel_income.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_income.setText("Add Income");
        jLabel_income.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_incomeMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_incomeMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_incomeMouseEntered(evt);
            }
        });

        jLabel_target.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_target.setText("Target");
        jLabel_target.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_targetMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_targetMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_targetMouseEntered(evt);
            }
        });

        jLabel_settings.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_settings.setText("Settings");
        jLabel_settings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_settingsMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel_settingsMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel_settingsMouseEntered(evt);
            }
        });

        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Calculator");
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });

        jLabel_query.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_query.setText("Query Set");
        jLabel_query.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel_queryMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_query)
                    .addComponent(jLabel26)
                    .addComponent(jLabel_settings)
                    .addComponent(jLabel_target)
                    .addComponent(jLabel_income)
                    .addComponent(jLabel_cost)
                    .addComponent(jLabel_dashboard)
                    .addComponent(jLabel1))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addComponent(jLabel_dashboard)
                .addGap(18, 18, 18)
                .addComponent(jLabel_cost)
                .addGap(18, 18, 18)
                .addComponent(jLabel_income)
                .addGap(18, 18, 18)
                .addComponent(jLabel_target)
                .addGap(18, 18, 18)
                .addComponent(jLabel_settings)
                .addGap(18, 18, 18)
                .addComponent(jLabel_query)
                .addGap(16, 16, 16)
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));

        jLabel_user.setForeground(new java.awt.Color(255, 255, 255));
        jLabel_user.setText("User Name");

        jLabel8.setForeground(new java.awt.Color(255, 51, 51));
        jLabel8.setText("Logout");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel_user, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122)
                .addComponent(jLabel8)
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_user)
                    .addComponent(jLabel8))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(153, 153, 153));
        jPanel4.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jInternalFrame_dashboard.setBackground(new java.awt.Color(0, 153, 153));
        jInternalFrame_dashboard.setBorder(javax.swing.BorderFactory.createTitledBorder("Dashboard"));
        jInternalFrame_dashboard.setVisible(false);
        jInternalFrame_dashboard.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(153, 153, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel23.setText("Total Cost of Running Month");

        jLabel_monthlyTotal.setText("0");

        jLabel27.setText("TK");

        jLabel60.setText("Total :");

        jLabel61.setText("Target : ");

        jLabel_monthlyTotal_target.setText("0");

        jLabel62.setText("Your Hand : ");

        jLabel_total_hand.setText("0");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel62)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_total_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27))
                    .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel11Layout.createSequentialGroup()
                            .addComponent(jLabel61)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel_monthlyTotal_target, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(34, 34, 34))
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel60)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_monthlyTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_monthlyTotal)
                    .addComponent(jLabel60))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(jLabel_monthlyTotal_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(jLabel_total_hand)
                    .addComponent(jLabel27))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 260, 110));

        jPanel12.setBackground(new java.awt.Color(204, 204, 255));
        jPanel12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel28.setText("Total Bazar of Running Month");

        jLabel_bazarMonthly.setText("0");

        jLabel30.setText("TK");

        jLabel48.setText("Total : ");

        jLabel49.setText("Target :");

        jLabel_bazarMonthly_target.setText("0");

        jLabel_bazar_hand.setText("0");

        jLabel65.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel_bazarMonthly, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                            .addComponent(jLabel_bazarMonthly_target, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(95, Short.MAX_VALUE))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel65)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_bazar_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel30))
                            .addComponent(jLabel48)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(25, Short.MAX_VALUE))))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_bazarMonthly)
                    .addComponent(jLabel48))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel49)
                    .addComponent(jLabel_bazarMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel65)
                    .addComponent(jLabel_bazar_hand)
                    .addComponent(jLabel30))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 20, -1, 110));

        jPanel14.setBackground(new java.awt.Color(204, 255, 204));
        jPanel14.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel34.setText("Total xyz of Running Month");

        jLabel_cgMonthly.setText("0");

        jLabel36.setText("TK");

        jLabel52.setText("Total : ");

        jLabel53.setText("Target :");

        jLabel_cgMonthly_target.setText("0");

        jLabel_xyz_hand.setText("0");

        jLabel67.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel67)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_xyz_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36))
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel53)
                                .addComponent(jLabel52))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel_cgMonthly_target, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(49, 49, 49))
                                .addGroup(jPanel14Layout.createSequentialGroup()
                                    .addComponent(jLabel_cgMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_cgMonthly)
                    .addComponent(jLabel52))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel53)
                    .addComponent(jLabel_cgMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(jLabel_xyz_hand)
                    .addComponent(jLabel36))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 150, -1, 110));

        jPanel13.setBackground(new java.awt.Color(0, 204, 204));
        jPanel13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel31.setText("Total Travel Fare of Running Month");

        jLabel_travelMonthly.setText("0");

        jLabel33.setText("TK");

        jLabel50.setText("Total :");

        jLabel51.setText("Target :");

        jLabel_travelMonthly_target.setText("0");

        jLabel_travel_hand.setText("0");

        jLabel75.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel75)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_travel_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50)
                            .addComponent(jLabel51))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel_travelMonthly_target, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel_travelMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_travelMonthly)
                    .addComponent(jLabel50))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel51)
                    .addComponent(jLabel_travelMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel75)
                    .addComponent(jLabel_travel_hand)
                    .addComponent(jLabel33))
                .addContainerGap())
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, -1, 110));

        jPanel15.setBackground(new java.awt.Color(153, 102, 255));
        jPanel15.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel37.setText("Total Shopping cost of Running Month");

        jLabel_shopMonthly.setText("0");

        jLabel39.setText("TK");

        jLabel58.setText("Total :");

        jLabel59.setText("Target :");

        jLabel_shopMonthly_target.setText("0");

        jLabel_shop_hand.setText("0");

        jLabel73.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel59)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel_shopMonthly_target, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(jLabel58)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_shopMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel73)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_shop_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel39)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel58, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel_shopMonthly, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel59)
                    .addComponent(jLabel_shopMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel73)
                    .addComponent(jLabel_shop_hand)
                    .addComponent(jLabel39))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 440, -1, 110));

        jPanel16.setBackground(new java.awt.Color(153, 153, 153));
        jPanel16.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel40.setText("Total other cost of Running Month");

        jLabel_otherMonthly.setText("0");

        jLabel42.setText("TK");

        jLabel54.setText("Total : ");

        jLabel55.setText("Target : ");

        jLabel_otherMonthly_target.setText("0");

        jLabel_other_hand.setText("0");

        jLabel71.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel40)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel16Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel16Layout.createSequentialGroup()
                                    .addComponent(jLabel55)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel_otherMonthly_target, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel16Layout.createSequentialGroup()
                                    .addComponent(jLabel54)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel_otherMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel16Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel_other_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel42)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_otherMonthly)
                    .addComponent(jLabel54))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel55)
                    .addComponent(jLabel_otherMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(jLabel_other_hand)
                    .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 280, -1, 120));

        jPanel17.setBackground(new java.awt.Color(255, 204, 204));
        jPanel17.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel43.setText("Total Resturent cost of Running Month");

        jLabel_resMonthly.setText("0");

        jLabel45.setText("TK");

        jLabel_resMonthly_target.setText("0");

        jLabel56.setText("Target :");

        jLabel57.setText("Total : ");

        jLabel_rest_hand.setText("0");

        jLabel69.setText("Your Hand : ");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel69)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_rest_hand, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel45)
                        .addContainerGap())
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel56)
                            .addComponent(jLabel57))
                        .addGap(23, 23, 23)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel_resMonthly, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel17Layout.createSequentialGroup()
                                .addComponent(jLabel_resMonthly_target, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(62, 62, 62))))))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel_resMonthly)
                    .addComponent(jLabel57))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel56)
                    .addComponent(jLabel_resMonthly_target))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jLabel_rest_hand)
                    .addComponent(jLabel45))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jInternalFrame_dashboard.getContentPane().add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, 120));

        jPanel4.add(jInternalFrame_dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 14, 880, 620));

        jInternalFrame_addCost.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Cost"));
        jInternalFrame_addCost.setVisible(false);
        jInternalFrame_addCost.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(0, 153, 153));

        jLabel12.setText("Action :");

        jComboBox_cost_action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Edit", "Delete" }));
        jComboBox_cost_action.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_cost_actionActionPerformed(evt);
            }
        });

        jLabel13.setText("Date : ");

        jLabel14.setText("Category : ");

        jLabel15.setText("Cost :");

        jButton4.setText("Submit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jTable_cost.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Category", "Cost", "Description"
            }
        ));
        jTable_cost.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_costMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable_cost);

        jLabel17.setText("Description : ");

        jTextArea_description.setColumns(20);
        jTextArea_description.setRows(5);
        jScrollPane5.setViewportView(jTextArea_description);

        jLabel_currency.setText("TK");

        jLabel21.setText("To Date : ");

        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel16.setText("From Date : ");

        jLabel22.setText("Total Cost : ");

        jLabel_totalCost.setText("0");

        jLabel_curr.setText("Curr");

        jLabel24.setText("Category :");

        jLabel25.setText("Avg : ");

        jLabel_avgCost.setText("0");

        jLabel7.setText("Target :");

        jLabel_targetam.setText("0");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addGap(52, 52, 52)
                                .addComponent(jLabel21)
                                .addGap(69, 69, 69)
                                .addComponent(jLabel24))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(jDateChooser_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox_cat_search, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addComponent(jButton5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_totalCost, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_avgCost, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel_targetam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel_curr)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel21)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jDateChooser_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jDateChooser_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jComboBox_cat_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel_curr)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(jLabel_totalCost)
                        .addComponent(jLabel25)
                        .addComponent(jLabel_avgCost)
                        .addComponent(jLabel7)
                        .addComponent(jLabel_targetam)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jCheckBox_fixed.setText("Monthly Fixed Cost");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton4)
                                .addComponent(jCheckBox_fixed))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel15))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox_cost_action, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jDateChooser_sDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField_cost, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel_currency))))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBox_category, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jComboBox_cost_action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jDateChooser_sDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField_cost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel_currency))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jComboBox_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox_fixed)
                        .addGap(33, 33, 33)
                        .addComponent(jButton4)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE))))
        );

        jInternalFrame_addCost.getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 860, 600));

        jPanel4.add(jInternalFrame_addCost, new org.netbeans.lib.awtextra.AbsoluteConstraints(3, 6, 890, 640));

        jInternalFrame_addIncome.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Income"));
        jInternalFrame_addIncome.setVisible(false);
        jInternalFrame_addIncome.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(0, 153, 153));

        jComboBox_income_action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Edit", "Delete" }));

        jLabel10.setText("Amount : ");

        jLabel_income_currency.setText("jLabel29");

        jLabel6.setText("Date :");

        jLabel11.setText("Action : ");

        jLabel9.setText("Source : ");

        jButton3.setText("Submit");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addComponent(jComboBox_income_action, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(118, 118, 118))
                        .addGroup(jPanel18Layout.createSequentialGroup()
                            .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jDateChooser_income_date, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(75, 75, 75)))
                    .addGroup(jPanel18Layout.createSequentialGroup()
                        .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3)
                            .addGroup(jPanel18Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField_income_source, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(jTextField_income_amount, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel_income_currency)
                        .addContainerGap())))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jComboBox_income_action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jDateChooser_income_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField_income_source, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField_income_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_income_currency))
                .addGap(36, 36, 36)
                .addComponent(jButton3)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTable_income.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Date", "Source Of Income", "Amount"
            }
        ));
        jTable_income.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_incomeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable_income);

        jButton6.setBackground(new java.awt.Color(0, 204, 204));
        jButton6.setText("Search");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel18.setText("From Date");

        jLabel32.setText("To Date");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jDateChooser_income_search_from, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(jDateChooser_income_search_to, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addGap(90, 90, 90))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel32))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateChooser_income_search_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jDateChooser_income_search_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(266, 266, 266))))
        );

        jInternalFrame_addIncome.getContentPane().add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 860, 590));

        jPanel4.add(jInternalFrame_addIncome, new org.netbeans.lib.awtextra.AbsoluteConstraints(4, 4, 890, 630));

        jInternalFrame_settings.setBorder(javax.swing.BorderFactory.createTitledBorder("Settings"));
        jInternalFrame_settings.setVisible(false);
        jInternalFrame_settings.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(0, 153, 153));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Add Currency"));

        jLabel2.setText("Currency Name : ");

        jLabel3.setText("Action : ");

        jComboBox_action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Edit", "Delete" }));

        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable_currency.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Currency Name", "isDefault"
            }
        ));
        jTable_currency.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_currencyMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable_currency);

        jCheckBox_isdefault.setText("Set as default");
        jCheckBox_isdefault.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox_isdefaultMouseClicked(evt);
            }
        });
        jCheckBox_isdefault.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox_isdefaultActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox_isdefault)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_currency)
                                .addComponent(jComboBox_action, 0, 119, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox_action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField_currency, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox_isdefault)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jInternalFrame_settings.getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 860, 240));

        jPanel6.setBackground(new java.awt.Color(0, 153, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), "Categorry"));

        jComboBox_action_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Edit", "Delete" }));

        jLabel4.setText("Action : ");

        jLabel5.setText("Category");

        jTable_category.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Category"
            }
        ));
        jTable_category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_categoryMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable_category);

        jButton2.setText("Submit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField_category)
                            .addComponent(jComboBox_action_category, 0, 145, Short.MAX_VALUE)))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox_action_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addContainerGap(193, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        jInternalFrame_settings.getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 860, 350));

        jPanel4.add(jInternalFrame_settings, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 900, 640));

        jInternalFrame_report.setBackground(new java.awt.Color(0, 153, 153));
        jInternalFrame_report.setBorder(javax.swing.BorderFactory.createTitledBorder("Set Target"));
        jInternalFrame_report.setVisible(false);
        jInternalFrame_report.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jComboBox_target_action.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Add", "Edit", "Delete" }));
        jComboBox_target_action.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_target_actionActionPerformed(evt);
            }
        });

        jLabel29.setText("Category");

        jLabel_target_currency.setText("jLabel29");

        jLabel35.setText("From");

        jLabel38.setText("Action : ");

        jLabel41.setText("To");

        jButton8.setText("Submit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel19.setText("Amount");

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(36, 36, 36)
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addComponent(jDateChooser_targetFrom_date, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 6, Short.MAX_VALUE))
                                    .addComponent(jDateChooser_targetTo_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(77, 77, 77))
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addComponent(jLabel38)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_target_action, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel20Layout.createSequentialGroup()
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                                        .addComponent(jLabel29)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addComponent(jLabel19)
                                        .addGap(18, 18, 18)))
                                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel20Layout.createSequentialGroup()
                                        .addComponent(jTextField_target_amount, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel_target_currency, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jComboBox_target_category, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jComboBox_target_action, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel35)
                    .addComponent(jDateChooser_targetFrom_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel41)
                    .addComponent(jDateChooser_targetTo_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jComboBox_target_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField_target_amount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel_target_currency))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(59, 59, 59))
        );

        jInternalFrame_report.getContentPane().add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        jPanel21.setBackground(new java.awt.Color(0, 153, 153));

        jButton9.setBackground(new java.awt.Color(0, 204, 204));
        jButton9.setText("Search");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel44.setText("From Date");

        jLabel46.setText("To Date");

        jTable_target.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "From", "To", "Category", "Amount"
            }
        ));
        jTable_target.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable_targetMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(jTable_target);

        jLabel20.setText("Category");

        jLabel47.setText("Total : ");

        jLabel_target_total.setText("jLabel48");

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44)
                            .addComponent(jDateChooser_target_search_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jDateChooser_target_search_to, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox_target_category_search, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9)
                                .addGap(47, 47, 47))
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel46)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20)
                                .addGap(190, 190, 190))))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel21Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel_target_total, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel46, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel44)
                        .addComponent(jLabel20)))
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jDateChooser_target_search_from, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jDateChooser_target_search_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9))
                    .addGroup(jPanel21Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox_target_category_search, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(jLabel_target_total))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jInternalFrame_report.getContentPane().add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, 580));

        jPanel4.add(jInternalFrame_report, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 890, 620));

        jInternalFrame_query.setVisible(false);
        jInternalFrame_query.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel9.setBackground(new java.awt.Color(0, 153, 153));
        jPanel9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel63.setText("Select Table : ");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel63)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(635, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel63)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
        );

        jInternalFrame_query.getContentPane().add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 840, 100));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane6.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jInternalFrame_query.getContentPane().add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 110, 860, 470));

        jPanel4.add(jInternalFrame_query, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 890, 620));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jInternalFrame_dashboard.setVisible(true);

        conn = DBConnection.connectDb();

        try {
            getDashboardData();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    public void getDashboardData() throws SQLException {
        LocalDate today = LocalDate.now();

        String firstDay = today.withDayOfMonth(1).toString();
        String lastDay = today.withDayOfMonth(today.lengthOfMonth()).toString();

        String sql1 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "'";

        Statement st = conn.createStatement();

        rs = st.executeQuery(sql1);

        String total = "", bazar = "";

        while (rs.next()) {
            total = rs.getString("total");
        }

        jLabel_monthlyTotal.setText(total);

        String sql2 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category like '%Bazar%'";
        rs = st.executeQuery(sql2);

        while (rs.next()) {
            bazar = rs.getString("total");
        }

        jLabel_bazarMonthly.setText(bazar);

        String travel = "";

        String sql3 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category='Travel Fares'";
        rs = st.executeQuery(sql3);

        while (rs.next()) {
            travel = rs.getString("total");
        }

        jLabel_travelMonthly.setText(travel);

        String sql4 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category='XYZ(cg)'";
        rs = st.executeQuery(sql4);
        String cg = "";

        while (rs.next()) {
            cg = rs.getString("total");
        }

        jLabel_cgMonthly.setText(cg);

        String sql5 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category='resturant'";
        rs = st.executeQuery(sql5);

        String res = "";
        while (rs.next()) {
            res = rs.getString("total");
        }

        jLabel_resMonthly.setText(res);

        String sql6 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category='Others'";
        rs = st.executeQuery(sql6);

        String others = "";
        while (rs.next()) {
            others = rs.getString("total");
        }

        jLabel_otherMonthly.setText(others);

        String sql7 = "select sum(amount) as total from cost where date between '" + firstDay + "' and  '" + lastDay + "' and category='Shopping'";
        rs = st.executeQuery(sql7);

        String shop = "";
        while (rs.next()) {
            shop = rs.getString("total");
        }

        jLabel_shopMonthly.setText(shop);

        //get Target
        String amnt = "";
        String sqlBTar = "select sum(amount) as amount from target where from_date between '" + firstDay + "' and '" + lastDay + "' and category like '%Bazar%'";
        rs = st.executeQuery(sqlBTar);
        while(rs.next()){
            amnt = rs.getString("amount");
        }
        
        jLabel_bazarMonthly_target.setText(amnt);
        HashMap<String, String> targetHash = new HashMap<String, String>();

        String sqlTarget = "select * from target where from_date between '" + firstDay + "' and '" + lastDay + "'";

        rs = st.executeQuery(sqlTarget);

        String category = "", amount = "";
        double totalT = 0;//20700+12801.45+5000
        while (rs.next()) {
            category = rs.getString("category");

            amount = rs.getString("amount");
            totalT = totalT + Double.parseDouble(amount);
            targetHash.put(category, amount);

        }
        //System.out.println(targetHash);
        totalT = totalT + 0;
        //jLabel_bazarMonthly_target.setText(targetHash.get("Bazar"));
        jLabel_travelMonthly_target.setText(targetHash.get("Travel Fares"));
        jLabel_cgMonthly_target.setText(targetHash.get("XYZ(cg)"));

        jLabel_resMonthly_target.setText(targetHash.get("resturant"));
        jLabel_otherMonthly_target.setText(targetHash.get("Others"));
        jLabel_shopMonthly_target.setText(targetHash.get("Shopping"));
        jLabel_monthlyTotal_target.setText(String.valueOf(totalT));

        rs.close();
        st.close();
        //determine differnece
        float totaldeff = 0, bazardeff = 0, traveldeff = 0, xyzdeff = 0, restdeff = 0, othersdeff = 0, shopdeff = 0;

        totaldeff = (float) (totalT - Float.parseFloat(total));

        if (totaldeff < 500) {
            jLabel_total_hand.setForeground(Color.red);
            jLabel_total_hand.setText(String.valueOf(totaldeff));
        } else {
            jLabel_total_hand.setForeground(Color.green);
            jLabel_total_hand.setText(String.valueOf(totaldeff));
        }

        //bazar
        bazardeff = (float) (Float.parseFloat(amnt) - Float.parseFloat(bazar));

        if (bazardeff < 500) {
            jLabel_bazar_hand.setForeground(Color.red);
            jLabel_bazar_hand.setText(String.valueOf(bazardeff));
        } else {
            jLabel_bazar_hand.setForeground(Color.green);
            jLabel_bazar_hand.setText(String.valueOf(bazardeff));
        }

        //travel
        traveldeff = (float) (Float.parseFloat(targetHash.get("Travel Fares")) - Float.parseFloat(travel));

        if (traveldeff < 500) {
            jLabel_travel_hand.setForeground(Color.red);
            jLabel_travel_hand.setText(String.valueOf(traveldeff));
        } else {
            jLabel_travel_hand.setForeground(Color.green);
            jLabel_travel_hand.setText(String.valueOf(traveldeff));
        }

        //xxyz
        xyzdeff = (float) (Float.parseFloat(targetHash.get("XYZ(cg)")) - Float.parseFloat(cg));

        if (xyzdeff < 500) {
            jLabel_xyz_hand.setForeground(Color.red);
            jLabel_xyz_hand.setText(String.valueOf(xyzdeff));
        } else {
            jLabel_xyz_hand.setForeground(Color.green);
            jLabel_xyz_hand.setText(String.valueOf(xyzdeff));
        }

        //rest
        restdeff = (float) (Float.parseFloat(targetHash.get("resturant")) - Float.parseFloat(res));

        if (restdeff < 500) {
            jLabel_rest_hand.setForeground(Color.red);
            jLabel_rest_hand.setText(String.valueOf(restdeff));
        } else {
            jLabel_rest_hand.setForeground(Color.green);
            jLabel_rest_hand.setText(String.valueOf(restdeff));
        }
        //others
        othersdeff = (float) (Float.parseFloat(targetHash.get("Others")) - Float.parseFloat(others));

        if (othersdeff < 500) {
            jLabel_other_hand.setForeground(Color.red);
            jLabel_other_hand.setText(String.valueOf(othersdeff));
        } else {
            jLabel_other_hand.setForeground(Color.green);
            jLabel_other_hand.setText(String.valueOf(othersdeff));
        }

        //shop
        shopdeff = (float) (Float.parseFloat(targetHash.get("Shopping")) - Float.parseFloat(shop));

        if (shopdeff < 500) {
            jLabel_shop_hand.setForeground(Color.red);
            jLabel_shop_hand.setText(String.valueOf(shopdeff));
        } else {
            jLabel_shop_hand.setForeground(Color.green);
            jLabel_shop_hand.setText(String.valueOf(shopdeff));
        }

    }

    public String getCurrency() throws SQLException {
        String sql = "select name from currency where is_default='default'";
        Statement st = conn.createStatement();
        rs = st.executeQuery(sql);

        while (rs.next()) {
            currname = rs.getString("name");
        }

        //jLabel_currency.setText(currname);
        //jLabel_curr.setText(currname);
        st.close();
        rs.close();

        return currname;
    }

    public void getCategory() throws SQLException {
        String sql = "select * from category";
        Statement st = conn.createStatement();
        rs = st.executeQuery(sql);
        String category = "";
        jComboBox_category.removeAllItems();
        jComboBox_cat_search.removeAllItems();
        jComboBox_cat_search.addItem("All");
        while (rs.next()) {
            category = rs.getString("category");

            jComboBox_category.addItem(category);
            jComboBox_cat_search.addItem(category);
        }

        st.close();
        rs.close();
    }

    private void jLabel_costMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_costMouseClicked
        btnSetup("cost");

        try {
            //get currency
            String c_name = getCurrency();
            jLabel_currency.setText(c_name);
            jLabel_curr.setText(c_name);

            getCategory();

            getCost("full");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel_costMouseClicked

    private void jLabel_dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_dashboardMouseClicked
        btnSetup("dashboard");
        try {
            getDashboardData();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel_dashboardMouseClicked

    private void jLabel_incomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_incomeMouseClicked
        btnSetup("income");
        try {
            String c_name = getCurrency();
            jLabel_income_currency.setText(c_name);
            getIncome("full");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel_incomeMouseClicked

    private void jLabel_settingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_settingsMouseClicked
        btnSetup("settings");
        try {
            getCurrencyData();
            getCategoryData();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel_settingsMouseClicked

    private void jLabel_dashboardMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_dashboardMouseEntered
        jLabel_dashboard.setForeground(Color.red);
    }//GEN-LAST:event_jLabel_dashboardMouseEntered

    private void jLabel_dashboardMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_dashboardMouseReleased

    }//GEN-LAST:event_jLabel_dashboardMouseReleased

    private void jLabel_dashboardMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_dashboardMouseExited
        jLabel_dashboard.setForeground(Color.WHITE);
    }//GEN-LAST:event_jLabel_dashboardMouseExited

    private void jLabel_costMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_costMouseEntered
        jLabel_cost.setForeground(Color.red);
    }//GEN-LAST:event_jLabel_costMouseEntered

    private void jLabel_costMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_costMouseExited
        jLabel_cost.setForeground(Color.WHITE);
    }//GEN-LAST:event_jLabel_costMouseExited

    private void jLabel_incomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_incomeMouseEntered
        jLabel_income.setForeground(Color.red);
    }//GEN-LAST:event_jLabel_incomeMouseEntered

    private void jLabel_incomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_incomeMouseExited
        jLabel_income.setForeground(Color.WHITE);
    }//GEN-LAST:event_jLabel_incomeMouseExited

    private void jLabel_targetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_targetMouseEntered
        jLabel_target.setForeground(Color.red);
    }//GEN-LAST:event_jLabel_targetMouseEntered

    private void jLabel_targetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_targetMouseExited
        jLabel_target.setForeground(Color.WHITE);
    }//GEN-LAST:event_jLabel_targetMouseExited

    private void jLabel_settingsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_settingsMouseEntered
        jLabel_settings.setForeground(Color.red);
    }//GEN-LAST:event_jLabel_settingsMouseEntered

    private void jLabel_settingsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_settingsMouseExited
        jLabel_settings.setForeground(Color.WHITE);
    }//GEN-LAST:event_jLabel_settingsMouseExited

    private void jComboBox_cost_actionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_cost_actionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_cost_actionActionPerformed

    public void getCategoryTarget() throws SQLException {
        String sql = "select * from category";
        Statement st = conn.createStatement();
        rs = st.executeQuery(sql);
        String category = "";
        jComboBox_target_category.removeAllItems();
        jComboBox_target_category_search.removeAllItems();
        jComboBox_target_category.addItem("All");
        jComboBox_target_category_search.addItem("All");
        while (rs.next()) {
            category = rs.getString("category");

            jComboBox_target_category.addItem(category);
            jComboBox_target_category_search.addItem(category);
        }

        st.close();
        rs.close();
    }

    private void jLabel_targetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_targetMouseClicked
        // TODO add your handling code here:
        btnSetup("report");
        String c_name = "";
        try {
            c_name = getCurrency();
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        jLabel_target_currency.setText(c_name);
        try {
            getCategoryTarget();
            getTarget("All");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jLabel_targetMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String action = jComboBox_action.getSelectedItem().toString();
        String currency = jTextField_currency.getText();
        String isDefault = "";
        if (jCheckBox_isdefault.isSelected()) {

            try {
                if (checkDefault().equals("false")) {
                    isDefault = "default";
                } else {
                    isDefault = "not default";
                    JOptionPane.showMessageDialog(null, "Already have a default Currency.");
                    return;
                }
            } catch (SQLException ex) {
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            isDefault = "not default";
        }

        crud("currency", action, isDefault);

    }//GEN-LAST:event_jButton1ActionPerformed

    public void crud(String table, String action, String isDefault) {
        String sql = "";
        String msg = "";

        if (action.equalsIgnoreCase("Add")) {
            if (table.equals("currency")) {
                String currency = jTextField_currency.getText();
                sql = "insert into currency (name, is_default) values ('" + currency + "','" + isDefault + "')";

            }
            if (table.equals("category")) {
                String category = jTextField_category.getText();
                sql = "insert into category (category) values ('" + category + "')";

            }
            msg = "Saved Successfully";
        }
        if (action.equalsIgnoreCase("edit")) {
            if (table.equals("currency")) {
                sql = "update currency set name = '" + jTextField_currency.getText() + "',is_default='" + isDefault + "' where id='" + selectedCurrId + "'";
            }
            if (table.equals("category")) {
                sql = "update category set category = '" + jTextField_category.getText() + "' where id='" + selectedCategory_id + "'";

            }
            msg = "updated Successfully";
        }
        if (action.equalsIgnoreCase("Delete")) {
            if (table.equals("currency")) {
                sql = "delete from currency where id='" + selectedCurrId + "'";
            }
            if (table.equals("category")) {
                sql = "delete from category where id='" + selectedCategory_id + "'";
            }
            msg = "deleted Successfully";
        }

        try {
            Statement st = conn.createStatement();

            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(null, msg);
            if (table.equals("currency")) {
                getCurrencyData();
            }
            if (table.equals("category")) {
                getCategoryData();
            }

            st.close();

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public String checkDefault() throws SQLException {
        int total = 0;
        String msg = "";

        String sql = "select count(id) as id from currency where is_default='default'";
        Statement st = conn.createStatement();
        rs = st.executeQuery(sql);

        while (rs.next()) {
            total = rs.getInt("id");
        }

        if (total == 0) {
            msg = "false";
        } else {
            msg = "true";
        }

        rs.close();
        st.close();
        return msg;
    }

    public void getCurrencyData() throws SQLException {
        Vector columnNames = new Vector();
        Vector data = new Vector();

        String curr = "", is_def = "";
        int column = 0, id = 0;

        String sql = "select * from currency";

        Statement st = conn.createStatement();

        rs = st.executeQuery(sql);

        columnNames.addElement("ID");
        columnNames.addElement("Currency Name");
        columnNames.addElement("is_Default");

        while (rs.next()) {
            Vector row = new Vector(column);

            id = rs.getInt("id");
            curr = rs.getString("name");
            is_def = rs.getString("is_default");

            row.addElement(id);
            row.addElement(curr);
            row.addElement(is_def);

            data.addElement(row);
        }

        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        jTable_currency.setModel(tableModel);

    }

    public void getCategoryData() throws SQLException {
        Vector columnNames = new Vector();
        Vector data = new Vector();

        String category = "", is_def = "";
        int column = 0, id = 0;

        String sql = "select * from category";

        Statement st = conn.createStatement();

        rs = st.executeQuery(sql);

        columnNames.addElement("ID");
        columnNames.addElement("Category Name");

        while (rs.next()) {
            Vector row = new Vector(column);

            id = rs.getInt("id");
            category = rs.getString("category");

            row.addElement(id);
            row.addElement(category);

            data.addElement(row);
        }

        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        jTable_category.setModel(tableModel);

    }

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            conn.close();
            System.out.println("Connection closed.");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jCheckBox_isdefaultMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox_isdefaultMouseClicked

    }//GEN-LAST:event_jCheckBox_isdefaultMouseClicked

    private void jCheckBox_isdefaultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox_isdefaultActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox_isdefaultActionPerformed

    private void jTable_currencyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_currencyMouseClicked
        selectedCurrId = jTable_currency.getValueAt(jTable_currency.getSelectedRow(), 0).toString();
        selectedCurrName = jTable_currency.getValueAt(jTable_currency.getSelectedRow(), 1).toString();
        selectedCurrIsdef = jTable_currency.getValueAt(jTable_currency.getSelectedRow(), 2).toString();

        jTextField_currency.setText(selectedCurrName);

        if (selectedCurrIsdef.equals("default")) {
            jCheckBox_isdefault.setSelected(true);
        } else {
            jCheckBox_isdefault.setSelected(false);
        }

    }//GEN-LAST:event_jTable_currencyMouseClicked

    private void jTable_categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_categoryMouseClicked
        selectedCategory_id = jTable_category.getValueAt(jTable_category.getSelectedRow(), 0).toString();
        selectedCategory_name = jTable_category.getValueAt(jTable_category.getSelectedRow(), 1).toString();
        
        jTextField_category.setText(selectedCategory_name);
    }//GEN-LAST:event_jTable_categoryMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        crud("category", jComboBox_action_category.getSelectedItem().toString(), "");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        String action = jComboBox_cost_action.getSelectedItem().toString();
        String cost = jTextField_cost.getText();
        String category = jComboBox_category.getSelectedItem().toString();
        String description = jTextArea_description.getText();
        String costDate = jDateChooser_sDate.getDate().toString();

        SimpleDateFormat sdf = new SimpleDateFormat("EE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
        //Date parsedDate;
        try {
            Date parsedDate = sdf.parse(costDate);
            SimpleDateFormat print = new SimpleDateFormat("yyyy-MM-dd");
            costDate = print.format(parsedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        String isFixed = "";
        if (jCheckBox_fixed.isSelected()) {
            isFixed = "fixed";
        } else {
            isFixed = "not fixed";
        }
        String sql = "";
        String msg = "";
        if (action.equalsIgnoreCase("Add")) {
            sql = "insert into cost (date,category,amount,description,is_fixed) values ('" + costDate + "','" + category + "','" + cost + "','" + description + "','" + isFixed + "')";
            msg = "Cost Saved Successfully. ";
        }
        if (action.equalsIgnoreCase("Edit")) {
            sql = "update cost set date='" + costDate + "',category='" + category + "',amount='" + cost + "',description='" + description + "',is_fixed='" + isFixed + "' where id = '" + selectedCostId + "'";
            msg = "Cost updated Successfully. ";
        }
        if (action.equalsIgnoreCase("Delete")) {
            sql = "delete from cost where id = '" + selectedCostId + "'";
            msg = "Cost deleted Successfully. ";

        }

        try {
            Statement st = conn.createStatement();

            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(null, msg);
            getCost("full");
            jTextArea_description.setText("");
            jTextField_category.setText("");
            jTextField_cost.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    public String dateFormate(String date) {
        SimpleDateFormat sdf = new SimpleDateFormat("EE MMM dd HH:mm:ss z yyyy", Locale.ENGLISH);
        //Date parsedDate;
        String dateRet = "";
        try {
            Date parsedDate = sdf.parse(date);
            SimpleDateFormat print = new SimpleDateFormat("yyyy-MM-dd");
            dateRet = print.format(parsedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        return dateRet;
    }

    private void jTable_costMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_costMouseClicked

        selectedCostId = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 0).toString();
        selectedCostDate = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 1).toString();
        selectedCostCategory = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 2).toString();
        selectedCostAmount = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 3).toString();
        selectedCostDescription = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 4).toString();
        selectedisFixed = jTable_cost.getValueAt(jTable_cost.getSelectedRow(), 5).toString();

        if (selectedisFixed.equals("fixed")) {
            jCheckBox_fixed.setSelected(true);
        } else {
            jCheckBox_fixed.setSelected(false);
        }
        try {
            Date selectedDate = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(selectedCostDate);
            jDateChooser_sDate.setDate(selectedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }

        jComboBox_category.setSelectedItem(selectedCostCategory);
        jTextField_cost.setText(selectedCostAmount);
        jTextArea_description.setText(selectedCostDescription);

    }//GEN-LAST:event_jTable_costMouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            getCost("search");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        // TODO add your handling code here:
        CalculatorS cal = new CalculatorS();
        cal.setDefaultCloseOperation(cal.DISPOSE_ON_CLOSE);
        cal.setVisible(true);
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String action = jComboBox_income_action.getSelectedItem().toString();
        String incomeDate = dateFormate(jDateChooser_income_date.getDate().toString());
        String source = jTextField_income_source.getText();
        String amount = jTextField_income_amount.getText();

        String sql = "";
        String msg = "";
        if (action.equalsIgnoreCase("add")) {
            sql = "INSERT into income (date,source,amount) VALUES('" + incomeDate + "','" + source + "','" + amount + "')";
            msg = "Income Saved Successfully";
        }

        if (action.equalsIgnoreCase("edit")) {
            sql = "Update income set date='" + incomeDate + "',source='" + source + "',amount='" + amount + "' where id = '" + selectedIncomeId + "'";
            msg = "Income Updated Successfully";
        }

        if (action.equalsIgnoreCase("delete")) {
            sql = "delete from income  where id = '" + selectedIncomeId + "'";
            msg = "Income Deleted Successfully";
        }

        Statement st = null;
        try {
            st = conn.createStatement();
            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(null, msg);

            getIncome("full");

            jTextField_income_source.setText("");
            jTextField_income_amount.setText("");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        try {
            getIncome("search");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTable_incomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_incomeMouseClicked
        selectedIncomeId = jTable_income.getValueAt(jTable_income.getSelectedRow(), 0).toString();
        selectedincomeDate = jTable_income.getValueAt(jTable_income.getSelectedRow(), 1).toString();
        selectedIncomeSource = jTable_income.getValueAt(jTable_income.getSelectedRow(), 2).toString();
        selectedIncomeAmount = jTable_income.getValueAt(jTable_income.getSelectedRow(), 3).toString();

        jTextField_income_source.setText(selectedIncomeSource);
        jTextField_income_amount.setText(selectedIncomeAmount);
        try {
            Date selectedDate = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(selectedincomeDate);
            jDateChooser_income_date.setDate(selectedDate);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable_incomeMouseClicked

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String action = jComboBox_target_action.getSelectedItem().toString();
        String from = dateFormate(jDateChooser_targetFrom_date.getDate().toString());
        String to = dateFormate(jDateChooser_targetTo_date.getDate().toString());
        String category = jComboBox_target_category.getSelectedItem().toString();
        String amount = jTextField_target_amount.getText();

        String sql = "", msg = "";

        if (action.equalsIgnoreCase("add")) {
            sql = "INSERT into target (from_date,to_date,category,amount) VALUES('" + from + "','" + to + "','" + category + "','" + amount + "')";
            msg = "Target Saved Successfully";
        }

        if (action.equalsIgnoreCase("edit")) {
            sql = "Update target set from_date='" + from + "',to_date='" + to + "',category='" + category + "',amount='" + amount + "' where id = '" + selectedTargetId + "'";
            msg = "Target Updated Successfully";
        }

        if (action.equalsIgnoreCase("delete")) {
            sql = "delete from target  where id = '" + selectedTargetId + "'";
            msg = "Target Deleted Successfully";
        }

        Statement st = null;
        try {
            st = conn.createStatement();
            st.executeUpdate(sql);

            JOptionPane.showMessageDialog(null, msg);

            getTarget("All");

        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton8ActionPerformed

    public void getTarget(String flag) throws SQLException {
        Vector columnNames = new Vector();
        Vector data = new Vector();

        LocalDate today = LocalDate.now();
        String firstDay = today.withDayOfMonth(1).toString();
        String lastDay = today.withDayOfMonth(today.lengthOfMonth()).toString();
        
        String fromdate = "", todate = "", category = "", amount = "";
        int column = 0, id = 0;

        float total = 0;

        String sql = "";

        if (flag.equals("All")) {
            sql = "select * from target where from_date >= '" + firstDay + "' and to_date <='" + lastDay + "'";
        }
        if (flag.equals("search")) {

            if (jComboBox_target_category_search.getSelectedItem().toString().equals("All")) {
                sql = "select * from target where from_date >= '" + dateFormate(jDateChooser_target_search_from.getDate().toString()) + "' and to_date <='" + dateFormate(jDateChooser_target_search_to.getDate().toString()) + "'";
            } else {
                sql = "select * from target where from_date >= '" + dateFormate(jDateChooser_target_search_from.getDate().toString()) + "' and to_date <='" + dateFormate(jDateChooser_target_search_to.getDate().toString()) + "' and category='" + jComboBox_target_category_search.getSelectedItem().toString() + "'";

            }
        }
        //System.out.println(sql);
        Statement st = conn.createStatement();

        rs = st.executeQuery(sql);

        int dayCount = 0;
        int totalAmount = 0;
        columnNames.addElement("ID");
        columnNames.addElement("From");
        columnNames.addElement("To");
        columnNames.addElement("Category");
        columnNames.addElement("Amount");

        while (rs.next()) {
            Vector row = new Vector(column);

            id = rs.getInt("id");
            fromdate = rs.getString("from_date");
            todate = rs.getString("to_date");
            category = rs.getString("category");
            amount = rs.getString("amount");

            //dayCount++;
            total = Float.parseFloat(amount) + total;

            row.addElement(id);
            row.addElement(fromdate);
            row.addElement(todate);
            row.addElement(category);
            row.addElement(amount);

            data.addElement(row);
        }

        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        jTable_target.setModel(tableModel);

        if (flag.equals("search")) {
            jLabel_target_total.setText(String.valueOf(total));
        }
    }


    private void jTable_targetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable_targetMouseClicked
        selectedTargetId = jTable_target.getValueAt(jTable_target.getSelectedRow(), 0).toString();
        selectedTargetFromDate = jTable_target.getValueAt(jTable_target.getSelectedRow(), 1).toString();
        selectedTargetToDate = jTable_target.getValueAt(jTable_target.getSelectedRow(), 2).toString();
        selectedTargetCategory = jTable_target.getValueAt(jTable_target.getSelectedRow(), 3).toString();
        selectedTargetAmount = jTable_target.getValueAt(jTable_target.getSelectedRow(), 4).toString();

        //jTextField_target_amount.setText(selectedIncomeSource);
        jComboBox_target_category.setSelectedItem(selectedTargetCategory);
        jTextField_target_amount.setText(selectedTargetAmount);

        try {
            Date selectedDateF = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(selectedTargetFromDate);
            Date selectedDateT = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(selectedTargetToDate);
            jDateChooser_targetFrom_date.setDate(selectedDateF);
            jDateChooser_targetTo_date.setDate(selectedDateT);
        } catch (ParseException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable_targetMouseClicked

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try {
            getTarget("search");
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox_target_actionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_target_actionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_target_actionActionPerformed

    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        try {
            // TODO add your handling code here:
            conn.close();
            dispose();

            Login home = new Login();
            home.setLocation(300, 200);
            home.setVisible(true);
        } catch (SQLException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel_queryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel_queryMouseClicked
//        btnSetup("query");
//        try {
//            getCurrencyData();
//            getCategoryData();
//        } catch (SQLException ex) {
//            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jLabel_queryMouseClicked
    public void getIncome(String flag) throws SQLException {
        Vector columnNames = new Vector();
        Vector data = new Vector();

        String date = "", source = "", amount = "";
        int column = 0, id = 0;

        String sql = "";

        if (flag.equals("full")) {
            sql = "select * from income order by date desc";
        }
        if (flag.equals("search")) {

            //if (jComboBox_cat_search.getSelectedItem().toString().equals("All")) {
            sql = "select * from income where date between '" + dateFormate(jDateChooser_income_search_from.getDate().toString()) + "' and '" + dateFormate(jDateChooser_income_search_to.getDate().toString()) + "' order by date desc";
            /*} else {
                sql = "select * from income where date between '" + dateFormate(jDateChooser_income_search_from.getDate().toString()) + "' and '" + dateFormate(jDateChooser_income_search_to.getDate().toString()) + "' and category='" + jComboBox_cat_search.getSelectedItem().toString() + "' order by date desc";
                
            }*/
        }

        Statement st = conn.createStatement();

        rs = st.executeQuery(sql);

        int dayCount = 0;
        int totalAmount = 0;
        columnNames.addElement("ID");
        columnNames.addElement("Date");
        columnNames.addElement("Source");
        columnNames.addElement("Amount");

        while (rs.next()) {
            Vector row = new Vector(column);

            id = rs.getInt("id");
            date = rs.getString("date");
            source = rs.getString("source");
            amount = rs.getString("amount");

            //dayCount++;
            row.addElement(id);
            row.addElement(date);
            row.addElement(source);
            row.addElement(amount);

            data.addElement(row);
        }

        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        jTable_income.setModel(tableModel);

    }

    public void getCost(String flag) throws SQLException, ParseException {
        Vector columnNames = new Vector();
        Vector data = new Vector();

        String date = "", category = "", cost = "", description = "", isFixed = "";
        int column = 0, id = 0;

        String sql = "";
        
        LocalDate today = LocalDate.now();
        String firstDay = today.withDayOfMonth(1).toString();
        String lastDay = today.withDayOfMonth(today.lengthOfMonth()).toString();

        if (flag.equals("full")) {
            sql = "select * from cost where date between '" + firstDay + "' and '" + lastDay + "' order by date desc";
        }
        if (flag.equals("search")) {
            if (jComboBox_cat_search.getSelectedItem().toString().equalsIgnoreCase("bazar")) {
                
                sql = "select * from cost where date between '" + dateFormate(jDateChooser_from.getDate().toString()) + "' and '" + dateFormate(jDateChooser_to.getDate().toString()) + "' and category like '%bazar_%' order by date desc";
            }
            else if (jComboBox_cat_search.getSelectedItem().toString().equals("All")) {
                
                sql = "select * from cost where date between '" + dateFormate(jDateChooser_from.getDate().toString()) + "' and '" + dateFormate(jDateChooser_to.getDate().toString()) + "' order by date desc";
            } else {
                sql = "select * from cost where date between '" + dateFormate(jDateChooser_from.getDate().toString()) + "' and '" + dateFormate(jDateChooser_to.getDate().toString()) + "' and category='" + jComboBox_cat_search.getSelectedItem().toString() + "' order by date desc";

            }
        }

        System.err.println(sql);
        Statement st = conn.createStatement();

        rs = st.executeQuery(sql);

        int dayCount = 0;
        int totalAmount = 0;
        columnNames.addElement("ID");
        columnNames.addElement("Date");
        columnNames.addElement("Category");
        columnNames.addElement("Cost");
        columnNames.addElement("Description");
        columnNames.addElement("isFixed");

        while (rs.next()) {
            Vector row = new Vector(column);

            id = rs.getInt("id");
            date = rs.getString("date");
            category = rs.getString("category");
            cost = rs.getString("amount");
            description = rs.getString("description");
            isFixed = rs.getString("is_fixed");

            totalAmount = totalAmount + Integer.parseInt(cost);
            //dayCount++;

            row.addElement(id);
            row.addElement(date);
            row.addElement(category);
            row.addElement(cost);
            row.addElement(description);
            row.addElement(isFixed);

            data.addElement(row);
        }

        DefaultTableModel tableModel = new DefaultTableModel(data, columnNames);
        jTable_cost.setModel(tableModel);
        jLabel_totalCost.setText(String.valueOf(totalAmount));
        if (flag.equals("search")) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
            Date firstDate = sdf.parse(dateFormate(jDateChooser_from.getDate().toString()));
            Date secondDate = sdf.parse(dateFormate(jDateChooser_to.getDate().toString()));

            long diffInMillies = Math.abs(secondDate.getTime() - firstDate.getTime());
            long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);

            long avg = totalAmount / (diff + 1);

            jLabel_avgCost.setText(String.valueOf(avg));
        }
        st.close();
        rs.close();
        
        //LocalDate today;
        String targetSql = "";
        String fDate = dateFormate(jDateChooser_from.getDate().toString());
        if(fDate.equals("")){
            today = LocalDate.now(); ;
        }
        else{
            today = LocalDate.parse(dateFormate(jDateChooser_from.getDate().toString())) ;
            
        }
        //String firstDay = today.withDayOfMonth(1).toString();
        //String lastDay = today.withDayOfMonth(today.lengthOfMonth()).toString();
        
        
        if(category.equals("")){
            targetSql = "select amount from target where from_date between '" + firstDay + "' and '" + lastDay + "'";
        }
        else{
            targetSql = "select amount from target where from_date between '" + firstDay + "' and '" + lastDay + "' and category='" + jComboBox_cat_search.getSelectedItem().toString() + "'";
        }
        System.out.println(targetSql);
        Statement st_ = conn.createStatement();
        rs = st_.executeQuery(targetSql);
        
        String am = "";
        
        while(rs.next()){
            am = rs.getString("amount");
        }
        
        jLabel_targetam.setText(am);
        rs.close();
        st_.close();
        

    }

    public void btnSetup(String btnName) {
        switch (btnName) {
            case "cost":
                jInternalFrame_addCost.setVisible(true);
                jInternalFrame_dashboard.setVisible(false);
                jInternalFrame_addIncome.setVisible(false);
                jInternalFrame_settings.setVisible(false);
                jInternalFrame_report.setVisible(false);
                jInternalFrame_query.setVisible(false);

                jLabel_cost.setForeground(Color.yellow);
                jLabel_dashboard.setForeground(Color.WHITE);
                jLabel_income.setForeground(Color.WHITE);
                jLabel_settings.setForeground(Color.WHITE);
                jLabel_target.setForeground(Color.WHITE);
                jLabel_query.setForeground(Color.WHITE);
                
                break;

            case "income":
                jInternalFrame_addCost.setVisible(false);
                jInternalFrame_dashboard.setVisible(false);
                jInternalFrame_addIncome.setVisible(true);
                jInternalFrame_settings.setVisible(false);
                jInternalFrame_report.setVisible(false);
                jInternalFrame_query.setVisible(false);

                jLabel_cost.setForeground(Color.WHITE);
                jLabel_dashboard.setForeground(Color.WHITE);
                jLabel_income.setForeground(Color.YELLOW);
                jLabel_settings.setForeground(Color.WHITE);
                jLabel_target.setForeground(Color.WHITE);
                jLabel_query.setForeground(Color.WHITE);
                break;

            case "dashboard":
                jInternalFrame_addCost.setVisible(false);
                jInternalFrame_dashboard.setVisible(true);
                jInternalFrame_addIncome.setVisible(false);
                jInternalFrame_settings.setVisible(false);
                jInternalFrame_report.setVisible(false);
                jInternalFrame_query.setVisible(false);

                jLabel_cost.setForeground(Color.WHITE);
                jLabel_dashboard.setForeground(Color.YELLOW);
                jLabel_income.setForeground(Color.WHITE);
                jLabel_settings.setForeground(Color.WHITE);
                jLabel_target.setForeground(Color.WHITE);
                jLabel_query.setForeground(Color.WHITE);
                break;

            case "settings":
                jInternalFrame_addCost.setVisible(false);
                jInternalFrame_dashboard.setVisible(false);
                jInternalFrame_addIncome.setVisible(false);
                jInternalFrame_settings.setVisible(true);
                jInternalFrame_report.setVisible(false);
                jInternalFrame_query.setVisible(false);

                jLabel_cost.setForeground(Color.WHITE);
                jLabel_dashboard.setForeground(Color.WHITE);
                jLabel_income.setForeground(Color.WHITE);
                jLabel_settings.setForeground(Color.YELLOW);
                jLabel_target.setForeground(Color.WHITE);
                jLabel_query.setForeground(Color.WHITE);
                break;

            case "report":
                jInternalFrame_report.setVisible(true);
                jInternalFrame_addCost.setVisible(false);
                jInternalFrame_dashboard.setVisible(false);
                jInternalFrame_addIncome.setVisible(false);
                jInternalFrame_settings.setVisible(false);
                jInternalFrame_query.setVisible(false);

                jLabel_cost.setForeground(Color.WHITE);
                jLabel_dashboard.setForeground(Color.WHITE);
                jLabel_income.setForeground(Color.WHITE);
                jLabel_settings.setForeground(Color.WHITE);
                jLabel_target.setForeground(Color.yellow);
                jLabel_query.setForeground(Color.WHITE);
                break;
                
//            case "query":
//                jInternalFrame_query.setVisible(true);
//                jInternalFrame_report.setVisible(false);
//                jInternalFrame_addCost.setVisible(false);
//                jInternalFrame_dashboard.setVisible(false);
//                jInternalFrame_addIncome.setVisible(false);
//                jInternalFrame_settings.setVisible(false);
//
//                jLabel_cost.setForeground(Color.WHITE);
//                jLabel_dashboard.setForeground(Color.WHITE);
//                jLabel_income.setForeground(Color.WHITE);
//                jLabel_settings.setForeground(Color.WHITE);
//                jLabel_target.setForeground(Color.WHITE);
//                jLabel_query.setForeground(Color.YELLOW);
//                break;

            default:
                JOptionPane.showMessageDialog(null, "Wrong button clicked.");
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Home().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox_fixed;
    private javax.swing.JCheckBox jCheckBox_isdefault;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox_action;
    private javax.swing.JComboBox<String> jComboBox_action_category;
    private javax.swing.JComboBox<String> jComboBox_cat_search;
    private javax.swing.JComboBox<String> jComboBox_category;
    private javax.swing.JComboBox<String> jComboBox_cost_action;
    private javax.swing.JComboBox<String> jComboBox_income_action;
    private javax.swing.JComboBox<String> jComboBox_target_action;
    private javax.swing.JComboBox<String> jComboBox_target_category;
    private javax.swing.JComboBox<String> jComboBox_target_category_search;
    private com.toedter.calendar.JDateChooser jDateChooser_from;
    private com.toedter.calendar.JDateChooser jDateChooser_income_date;
    private com.toedter.calendar.JDateChooser jDateChooser_income_search_from;
    private com.toedter.calendar.JDateChooser jDateChooser_income_search_to;
    private com.toedter.calendar.JDateChooser jDateChooser_sDate;
    private com.toedter.calendar.JDateChooser jDateChooser_targetFrom_date;
    private com.toedter.calendar.JDateChooser jDateChooser_targetTo_date;
    private com.toedter.calendar.JDateChooser jDateChooser_target_search_from;
    private com.toedter.calendar.JDateChooser jDateChooser_target_search_to;
    private com.toedter.calendar.JDateChooser jDateChooser_to;
    private javax.swing.JInternalFrame jInternalFrame_addCost;
    private javax.swing.JInternalFrame jInternalFrame_addIncome;
    private javax.swing.JInternalFrame jInternalFrame_dashboard;
    private javax.swing.JInternalFrame jInternalFrame_query;
    private javax.swing.JInternalFrame jInternalFrame_report;
    private javax.swing.JInternalFrame jInternalFrame_settings;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_avgCost;
    private javax.swing.JLabel jLabel_bazarMonthly;
    private javax.swing.JLabel jLabel_bazarMonthly_target;
    private javax.swing.JLabel jLabel_bazar_hand;
    private javax.swing.JLabel jLabel_cgMonthly;
    private javax.swing.JLabel jLabel_cgMonthly_target;
    private javax.swing.JLabel jLabel_cost;
    private javax.swing.JLabel jLabel_curr;
    private javax.swing.JLabel jLabel_currency;
    private javax.swing.JLabel jLabel_dashboard;
    private javax.swing.JLabel jLabel_income;
    private javax.swing.JLabel jLabel_income_currency;
    private javax.swing.JLabel jLabel_monthlyTotal;
    private javax.swing.JLabel jLabel_monthlyTotal_target;
    private javax.swing.JLabel jLabel_otherMonthly;
    private javax.swing.JLabel jLabel_otherMonthly_target;
    private javax.swing.JLabel jLabel_other_hand;
    private javax.swing.JLabel jLabel_query;
    private javax.swing.JLabel jLabel_resMonthly;
    private javax.swing.JLabel jLabel_resMonthly_target;
    private javax.swing.JLabel jLabel_rest_hand;
    private javax.swing.JLabel jLabel_settings;
    private javax.swing.JLabel jLabel_shopMonthly;
    private javax.swing.JLabel jLabel_shopMonthly_target;
    private javax.swing.JLabel jLabel_shop_hand;
    private javax.swing.JLabel jLabel_target;
    private javax.swing.JLabel jLabel_target_currency;
    private javax.swing.JLabel jLabel_target_total;
    private javax.swing.JLabel jLabel_targetam;
    private javax.swing.JLabel jLabel_totalCost;
    private javax.swing.JLabel jLabel_total_hand;
    private javax.swing.JLabel jLabel_travelMonthly;
    private javax.swing.JLabel jLabel_travelMonthly_target;
    private javax.swing.JLabel jLabel_travel_hand;
    private javax.swing.JLabel jLabel_user;
    private javax.swing.JLabel jLabel_xyz_hand;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable_category;
    private javax.swing.JTable jTable_cost;
    private javax.swing.JTable jTable_currency;
    private javax.swing.JTable jTable_income;
    private javax.swing.JTable jTable_target;
    private javax.swing.JTextArea jTextArea_description;
    private javax.swing.JTextField jTextField_category;
    private javax.swing.JTextField jTextField_cost;
    private javax.swing.JTextField jTextField_currency;
    private javax.swing.JTextField jTextField_income_amount;
    private javax.swing.JTextField jTextField_income_source;
    private javax.swing.JTextField jTextField_target_amount;
    // End of variables declaration//GEN-END:variables
}
